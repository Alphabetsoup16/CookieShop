// <auto-generated />
using System;
using CookieShop.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CookieShop.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210727155150_ProductSearch")]
    partial class ProductSearch
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CookieShop.Shared.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "palette",
                            Name = "Cookies",
                            Url = "cookies"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "egg",
                            Name = "Cakes",
                            Url = "cakes"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "shop",
                            Name = "Specialty",
                            Url = "specialty"
                        });
                });

            modelBuilder.Entity("CookieShop.Shared.Edition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Editions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Default"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gluten free"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Organic"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sugar free"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Nut free"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Regular icecream"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Dairy free icecream"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Frosted"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Unfrosted"
                        });
                });

            modelBuilder.Entity("CookieShop.Shared.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DateCreated = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Classic chocolate chip cookie with a pinch of sea salt",
                            Image = "https://images.unsplash.com/photo-1499636136210-6f4ee915583e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&q=80",
                            IsDeleted = false,
                            IsPublic = false,
                            Title = "Chocolate Chip",
                            Views = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            DateCreated = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Double chocolate fudge brownies",
                            Image = "https://images.unsplash.com/photo-1605190557072-1fe6a230ee65?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=670&q=80",
                            IsDeleted = false,
                            IsPublic = false,
                            Title = "Brownie",
                            Views = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            DateCreated = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Delicious ice cream between two chocolate chip cookies",
                            Image = "https://images.unsplash.com/photo-1559622214-f8a9850965bb?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=802&q=80",
                            IsDeleted = false,
                            IsPublic = false,
                            Title = "Ice Cream Sandwiches",
                            Views = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            DateCreated = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Rich chocolate cookie stuffed with white and dark chocolate",
                            Image = "https://images.unsplash.com/photo-1619149651177-b09092806f1a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=668&q=80",
                            IsDeleted = false,
                            IsPublic = false,
                            Title = "Chocolate Stuffed Cookie",
                            Views = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            DateCreated = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Our second most popular!",
                            Image = "https://images.unsplash.com/photo-1558455806-316856e5b499?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=802&q=80",
                            IsDeleted = false,
                            IsPublic = false,
                            Title = "Sprinkle Cookie",
                            Views = 0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            DateCreated = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A full tub of our famous double chocolate cookie dough",
                            Image = "https://images.unsplash.com/photo-1511382091779-4dedcc34e19b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8Y29va2llJTIwZG91Z2h8ZW58MHx8MHx8&auto=format&fit=crop&w=900&q=60",
                            IsDeleted = false,
                            IsPublic = false,
                            Title = "Cookie Dough",
                            Views = 0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            DateCreated = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Belgian waffle cookie crumble on vanilla custard with a graham cracker base",
                            Image = "https://images.unsplash.com/photo-1567954357754-b144384c0dcc?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=826&q=80",
                            IsDeleted = false,
                            IsPublic = false,
                            Title = "Waffle Crumb Cake",
                            Views = 0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            DateCreated = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Double chocolate cookie base with rich chocolate gnache and mousse layers",
                            Image = "https://images.unsplash.com/photo-1602351447937-745cb720612f?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=666&q=80",
                            IsDeleted = false,
                            IsPublic = false,
                            Title = "Chocolate Mousse Cake",
                            Views = 0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            DateCreated = new DateTime(2021, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A full loaf of our famous banana bread",
                            Image = "https://images.unsplash.com/photo-1605286978633-2dec93ff88a2?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1055&q=80",
                            IsDeleted = false,
                            IsPublic = false,
                            Title = "Banana Bread",
                            Views = 0
                        });
                });

            modelBuilder.Entity("CookieShop.Shared.ProductVariant", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("EditionId")
                        .HasColumnType("int");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId", "EditionId");

                    b.HasIndex("EditionId");

                    b.ToTable("ProductVariant");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            EditionId = 1,
                            OriginalPrice = 0m,
                            Price = 3.99m
                        },
                        new
                        {
                            ProductId = 1,
                            EditionId = 2,
                            OriginalPrice = 0m,
                            Price = 3.99m
                        },
                        new
                        {
                            ProductId = 1,
                            EditionId = 3,
                            OriginalPrice = 6.99m,
                            Price = 4.99m
                        },
                        new
                        {
                            ProductId = 1,
                            EditionId = 4,
                            OriginalPrice = 6.99m,
                            Price = 4.99m
                        },
                        new
                        {
                            ProductId = 1,
                            EditionId = 5,
                            OriginalPrice = 6.99m,
                            Price = 4.99m
                        },
                        new
                        {
                            ProductId = 4,
                            EditionId = 1,
                            OriginalPrice = 0m,
                            Price = 3.99m
                        },
                        new
                        {
                            ProductId = 4,
                            EditionId = 2,
                            OriginalPrice = 5.99m,
                            Price = 3.99m
                        },
                        new
                        {
                            ProductId = 4,
                            EditionId = 3,
                            OriginalPrice = 6.99m,
                            Price = 4.99m
                        },
                        new
                        {
                            ProductId = 4,
                            EditionId = 4,
                            OriginalPrice = 6.99m,
                            Price = 4.99m
                        },
                        new
                        {
                            ProductId = 4,
                            EditionId = 5,
                            OriginalPrice = 6.99m,
                            Price = 4.99m
                        },
                        new
                        {
                            ProductId = 5,
                            EditionId = 1,
                            OriginalPrice = 0m,
                            Price = 3.99m
                        },
                        new
                        {
                            ProductId = 5,
                            EditionId = 2,
                            OriginalPrice = 6.99m,
                            Price = 3.99m
                        },
                        new
                        {
                            ProductId = 5,
                            EditionId = 3,
                            OriginalPrice = 6.99m,
                            Price = 4.99m
                        },
                        new
                        {
                            ProductId = 5,
                            EditionId = 4,
                            OriginalPrice = 6.99m,
                            Price = 4.99m
                        },
                        new
                        {
                            ProductId = 5,
                            EditionId = 5,
                            OriginalPrice = 6.99m,
                            Price = 4.99m
                        },
                        new
                        {
                            ProductId = 3,
                            EditionId = 1,
                            OriginalPrice = 0m,
                            Price = 5.99m
                        },
                        new
                        {
                            ProductId = 3,
                            EditionId = 6,
                            OriginalPrice = 8.99m,
                            Price = 6.99m
                        },
                        new
                        {
                            ProductId = 3,
                            EditionId = 7,
                            OriginalPrice = 8.99m,
                            Price = 6.99m
                        },
                        new
                        {
                            ProductId = 7,
                            EditionId = 9,
                            OriginalPrice = 39.99m,
                            Price = 29.99m
                        },
                        new
                        {
                            ProductId = 7,
                            EditionId = 8,
                            OriginalPrice = 49.99m,
                            Price = 39.99m
                        },
                        new
                        {
                            ProductId = 8,
                            EditionId = 9,
                            OriginalPrice = 49.99m,
                            Price = 39.99m
                        },
                        new
                        {
                            ProductId = 8,
                            EditionId = 8,
                            OriginalPrice = 59.99m,
                            Price = 49.99m
                        },
                        new
                        {
                            ProductId = 9,
                            EditionId = 9,
                            OriginalPrice = 16.99m,
                            Price = 14.99m
                        },
                        new
                        {
                            ProductId = 9,
                            EditionId = 8,
                            OriginalPrice = 34.99m,
                            Price = 24.99m
                        },
                        new
                        {
                            ProductId = 2,
                            EditionId = 1,
                            OriginalPrice = 0m,
                            Price = 4.99m
                        },
                        new
                        {
                            ProductId = 2,
                            EditionId = 2,
                            OriginalPrice = 5.99m,
                            Price = 4.99m
                        },
                        new
                        {
                            ProductId = 2,
                            EditionId = 4,
                            OriginalPrice = 6.99m,
                            Price = 5.99m
                        },
                        new
                        {
                            ProductId = 6,
                            EditionId = 1,
                            OriginalPrice = 0m,
                            Price = 5.99m
                        },
                        new
                        {
                            ProductId = 6,
                            EditionId = 2,
                            OriginalPrice = 6.99m,
                            Price = 5.99m
                        },
                        new
                        {
                            ProductId = 6,
                            EditionId = 3,
                            OriginalPrice = 0m,
                            Price = 9.99m
                        },
                        new
                        {
                            ProductId = 6,
                            EditionId = 5,
                            OriginalPrice = 0m,
                            Price = 15.99m
                        });
                });

            modelBuilder.Entity("CookieShop.Shared.Stats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("LastVisit")
                        .HasColumnType("datetime2");

                    b.Property<int>("Visits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("CookieShop.Shared.Product", b =>
                {
                    b.HasOne("CookieShop.Shared.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CookieShop.Shared.ProductVariant", b =>
                {
                    b.HasOne("CookieShop.Shared.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CookieShop.Shared.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Edition");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CookieShop.Shared.Product", b =>
                {
                    b.Navigation("Variants");
                });
#pragma warning restore 612, 618
        }
    }
}
